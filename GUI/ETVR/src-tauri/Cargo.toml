[package]
name = "eyetrackvr"
version = "1.0.0"
description = "Eye tracking for VR"
authors = ["DaOfficialWizard", "Luckmer", "RedHawk989"]
license = "MIT"
repository = "https://github.com/RedHawk989/EyeTrackVR"
default-run = "eyetrackvr"
edition = "2021"
rust-version = "1.69"
include = ["/src", "/README.md", "/LICENCE"]


## /bin/sh RUSTDOCFLAGS="--cfg docsrs" cargo +nightly doc --all-features
#[package.metadata."docs.rs"]
#all-features = true
#rustdoc-args = ["--cfg", "docsrs"]

[dependencies]
serde = { workspace = true }
tauri = { workspace = true }
log = { workspace = true }
specta = { workspace = true }
tauri-specta = { workspace = true }
serde_json = "1.0"
whoami = "1.4.1"
sysinfo = "0.29.10"
sprintf = "0.1.3"
lazy_static = "1.4.0"
futures-util = "0.3.28"
mdns-sd = "0.8.0"
zip-extract = "0.1.2"
command-group = "2.1.0"

[dependencies.tauri-plugin-splashscreen]
path = "src/lib/splashscreen"

[dependencies.tauri-plugin-window-state]
git = "https://github.com/tauri-apps/plugins-workspace"
branch = "dev"

[dependencies.tauri-plugin-single-instance]
git = "https://github.com/tauri-apps/tauri-plugin-single-instance/"
branch = "dev"

[dependencies.tauri-plugin-upload]
git = "https://github.com/tauri-apps/plugins-workspace"
branch = "dev"

[dependencies.tauri-plugin-log]
git = "https://github.com/tauri-apps/plugins-workspace"
branch = "dev"

[dependencies.tauri-plugin-store]
git = "https://github.com/tauri-apps/plugins-workspace"
branch = "dev"

[dependencies.reqwest]
workspace = true

[dependencies.tokio]
version = "1"
features = ["full"]

[workspace.dependencies]
reqwest = { version = "0.11", features = ["json", "rustls-tls"] }
serde = { version = "1.0.188", features = ["derive"] }
specta = { version = "1.0.5", features = ["functions", "tauri"] }
tauri-specta = { version = "1.0.2", features = ["javascript", "typescript"] }
tauri = { version = "1.4.1", features = [
    "process-exit",
    "protocol-asset",
    "fs-all",
    "shell-sidecar",
    "dialog-all",
    "http-all",
    "icon-ico",
    "notification-all",
    "os-all",
    "path-all",
    "process-relaunch",
    "shell-open",
    "system-tray",
    "window-center",
    "window-close",
    "window-create",
    "window-hide",
    "window-maximize",
    "window-minimize",
    "window-request-user-attention",
    "window-set-decorations",
    "window-set-focus",
    "window-set-fullscreen",
    "window-set-position",
    "window-set-resizable",
    "window-set-size",
    "window-set-title",
    "window-show",
    "window-start-dragging",
    "window-unmaximize",
    "window-unminimize",
] }
log = "0.4.20"

[workspace]
members = ["src/lib/splashscreen", "src/lib/api"]

[features]
default = ["custom-protocol"]
custom-protocol = ["tauri/custom-protocol"]
updater = ["tauri/updater"]

[build-dependencies.tauri-build]
version = "1.4.1"
features = []

# //* If we need to implement OS specific commands, we can use these
#[target.'cfg(target_os = "linux")'.dependencies]
#sd-desktop-linux = { path = "./crates/linux" }
#
#[target.'cfg(target_os = "macos")'.dependencies]
#sd-desktop-macos = { path = "./crates/macos" }
#
#[target.'cfg(target_os = "windows")'.dependencies]
#sd-desktop-windows = { path = "./crates/windows" }

[profile]
[profile.dev]
debug = 0

[profile.release]
panic = "abort"
codegen-units = 1
lto = true
opt-level = "s"
strip = true
